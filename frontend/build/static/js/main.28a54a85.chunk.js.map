{"version":3,"sources":["components/representational/Header.jsx","components/pages/WordPage.jsx","components/representational/WordListItem.jsx","components/representational/WordList.jsx","components/representational/AddWord.jsx","components/pages/Homepage.jsx","MainRouter.jsx","theme/index.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","down","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","up","SearchAppBar","handleTerm","classes","useState","term","setTerm","useEffect","className","AppBar","Container","maxWidth","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","onChange","e","target","value","appBar","flex","lexical","fontStyle","fontSize","margin","Transition","React","forwardRef","props","ref","Slide","direction","FullScreenDialog","open","handleClose","word","Dialog","fullScreen","TransitionComponent","text","IconButton","onClick","edge","aria-label","Close","entries","map","entry","index","Grid","container","item","lexicalCategory","definitions","definition","style","Divider","lexicalTerm","marginTop","paper","cursor","fontWeight","WordListItem","setOpen","Paper","elevation","borderTopLeftRadius","borderTopRightRadius","WordList","wordArray","backdrop","zIndex","AddWord","handleReload","setWord","error","setError","bd","setBD","handleSubmit","a","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","data","status","payload","setTimeout","Add","Backdrop","CircularProgress","onClose","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","label","type","fullWidth","DialogActions","Button","homepage","minHeight","add","bottom","right","primary","Homepage","setWordArray","wordList","setWordList","flag","setFlag","fetchWords","wordArr","filter","includes","MainRouter","path","component","createMuiTheme","main","secondary","typography","fontFamily","App","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28a54a85.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport AppBar from \"@material-ui/core/AppBar\"\r\nimport Toolbar from \"@material-ui/core/Toolbar\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport InputBase from \"@material-ui/core/InputBase\"\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport { Container } from \"@material-ui/core\"\r\n\r\n//Styling the components using hook\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tsearch: {\r\n\t\tposition: \"relative\",\r\n\t\tborderRadius: theme.shape.borderRadius,\r\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25),\r\n\t\t},\r\n\t\tmarginLeft: 0,\r\n\t\twidth: \"20%\",\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmarginLeft: theme.spacing(1),\r\n\t\t\twidth: \"50%\",\r\n\t\t},\r\n\t},\r\n\tsearchIcon: {\r\n\t\tpadding: theme.spacing(0, 2),\r\n\t\theight: \"100%\",\r\n\t\tposition: \"absolute\",\r\n\t\tpointerEvents: \"none\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tinputRoot: {\r\n\t\tcolor: \"inherit\",\r\n\t},\r\n\tinputInput: {\r\n\t\tpadding: theme.spacing(1, 1, 1, 0),\r\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n\t\ttransition: theme.transitions.create(\"width\"),\r\n\t\twidth: \"100%\",\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\twidth: \"12ch\",\r\n\t\t\t\"&:focus\": {\r\n\t\t\t\twidth: \"20ch\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n}))\r\n\r\nexport default function SearchAppBar({ handleTerm }) {\r\n\tconst classes = useStyles()\r\n\t//Initializing the classes\r\n\r\n\tconst [term, setTerm] = useState(\"\")\r\n\r\n\t//Getting the term through prop tunneling\r\n\tuseEffect(() => {\r\n\t\thandleTerm(term)\r\n\t}, [term, handleTerm])\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t<Container maxWidth=\"md\">\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography className={classes.title} variant=\"h5\" noWrap>\r\n\t\t\t\t\t\t\tVocabulary\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<div className={classes.search}>\r\n\t\t\t\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\t\t\tplaceholder=\"Search…\"\r\n\t\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\t\troot: classes.inputRoot,\r\n\t\t\t\t\t\t\t\t\tinput: classes.inputInput,\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setTerm(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</Container>\r\n\t\t\t</AppBar>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport {\r\n\tDialog,\r\n\tDivider,\r\n\tAppBar,\r\n\tToolbar,\r\n\tIconButton,\r\n\tTypography,\r\n\tSlide,\r\n\tContainer,\r\n\tGrid,\r\n} from \"@material-ui/core\"\r\nimport { Close } from \"@material-ui/icons\"\r\nimport Bullets from \"@material-ui/icons/Brightness1\"\r\n\r\n//Styling the components using hook\r\nconst useStyles = makeStyles((theme) => ({\r\n\tappBar: {\r\n\t\tposition: \"relative\",\r\n\t},\r\n\ttitle: {\r\n\t\tmarginLeft: theme.spacing(2),\r\n\t\tflex: 1,\r\n\t},\r\n\tlexical: {\r\n\t\tfontStyle: \"italic\",\r\n\t\tcolor: \"grey\",\r\n\t\tfontSize: \"1.5rem\",\r\n\t\tmargin: \"2rem 0\",\r\n\t},\r\n}))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n\treturn <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\nexport default function FullScreenDialog({ open, handleClose, word }) {\r\n\tconst classes = useStyles()\r\n\t//Initializing the classes\r\n\r\n\treturn (\r\n\t\t// This is basically a dialogue which will open when clicked\r\n\t\t<Dialog fullScreen open={open} TransitionComponent={Transition}>\r\n\t\t\t<AppBar className={classes.appBar}>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h5\" className={classes.title}>\r\n\t\t\t\t\t\t\t{word.text}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tonClick={() => handleClose(false)}\r\n\t\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\taria-label=\"close\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Close />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</Container>\r\n\t\t\t</AppBar>\r\n\t\t\t<Container>\r\n\t\t\t\t{word.entries.map((entry, index) => (\r\n\t\t\t\t\t<Grid container key={index} direction=\"column\" spacing={5}>\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Typography className={classes.lexical}>\r\n\t\t\t\t\t\t\t\t({entry.lexicalCategory})\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Grid container item direction=\"column\" spacing={5}>\r\n\t\t\t\t\t\t\t\t{entry.definitions.map((definition, index) => (\r\n\t\t\t\t\t\t\t\t\t<Grid item key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Bullets style={{ fontSize: 10 }} /> {definition}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t))}\r\n\t\t\t</Container>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n","import React, { Fragment, useState } from \"react\"\r\n\r\nimport { Typography, Container, Paper, makeStyles } from \"@material-ui/core\"\r\n\r\nimport WordPage from \"../pages/WordPage\"\r\n\r\n//Styling the components using hook\r\nconst useStyles = makeStyles({\r\n\tlexicalTerm: {\r\n\t\tfontStyle: \"italic\",\r\n\t\tcolor: \"grey\",\r\n\t\tfontSize: \"1rem\",\r\n\t\tmarginTop: \"1rem\",\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: \"1.5rem 0\",\r\n\t\tcursor: \"pointer\",\r\n\t},\r\n\ttext: {\r\n\t\tfontWeight: \"700\",\r\n\t},\r\n})\r\n\r\nconst WordListItem = ({ word }) => {\r\n\tconst classes = useStyles()\r\n\t//Initializing the classes\r\n\r\n\tconst [open, setOpen] = useState(false)\r\n\r\n\t//Handles the Word page dialogue visibility\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Paper onClick={handleOpen} elevation={2} className={classes.paper}>\r\n\t\t\t\t<Container maxWidth=\"md\">\r\n\t\t\t\t\t<Typography variant=\"h4\" className={classes.text}>\r\n\t\t\t\t\t\t{word.text}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{/* mapping through the response array from the backend to show the info */}\r\n\t\t\t\t\t{word.entries.map((entry, index) => (\r\n\t\t\t\t\t\t<Fragment key={index}>\r\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.lexicalTerm}>\r\n\t\t\t\t\t\t\t\t({entry.lexicalCategory})\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Typography variant=\"h5\">{entry.definitions[0]}</Typography>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Container>\r\n\t\t\t</Paper>\r\n\t\t\t{/* The word page that shows more info about the word */}\r\n\t\t\t<WordPage handleClose={(open) => setOpen(open)} open={open} word={word} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default WordListItem\r\n","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport WordListItem from \"../representational/WordListItem\"\r\n\r\n//Styling the components using hook\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tbackgroundColor: \"white\",\r\n\t\tborderTopLeftRadius: \"5rem\",\r\n\t\tborderTopRightRadius: \"5rem\",\r\n\t},\r\n})\r\n\r\nconst WordList = ({ wordArray }) => {\r\n\tconst classes = useStyles()\r\n\t//Initializing the classes\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t{/* mapping through the word array */}\r\n\t\t\t{wordArray.map((word, index) => (\r\n\t\t\t\t<WordListItem key={index} word={word} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default WordList\r\n","import React, { useState } from \"react\"\r\nimport {\r\n\tButton,\r\n\tTextField,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogContentText,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tIconButton,\r\n\tCircularProgress,\r\n\tBackdrop,\r\n\tmakeStyles,\r\n} from \"@material-ui/core\"\r\n\r\nimport { Add } from \"@material-ui/icons\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tbackdrop: {\r\n\t\tzIndex: \"11 !important\",\r\n\t\tcolor: \"#fff\",\r\n\t},\r\n}))\r\n\r\nexport default function AddWord({ handleReload }) {\r\n\tconst classes = useStyles()\r\n\r\n\tconst [open, setOpen] = useState(false)\r\n\r\n\tconst [word, setWord] = useState(\"\")\r\n\tconst [error, setError] = useState(\"\")\r\n\tconst [bd, setBD] = useState(false)\r\n\r\n\t//Handles the add word dialogue\r\n\tconst handleOpen = () => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\t//Handles the add word dialogue\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false)\r\n\t\tsetError(\"\")\r\n\t}\r\n\r\n\t//action when you have asked to add a word\r\n\tconst handleSubmit = async () => {\r\n\t\tsetBD(true)\r\n\r\n\t\tconst data = await fetch(`/api/addWord`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAccept: \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ text: word }),\r\n\t\t}).then((res) => res.json())\r\n\r\n\t\tsetBD(false)\r\n\r\n\t\t//checking the response\r\n\t\tif (data.status === \"success\") {\r\n\t\t\tsetOpen(false)\r\n\t\t\thandleReload(true)\r\n\t\t} else if (data.status === \"fail\") {\r\n\t\t\tsetError(data.payload)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetError(\"\")\r\n\t\t\t}, 5000)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<IconButton\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tonClick={() => handleOpen()}\r\n\t\t\t\tstyle={{ backgroundColor: \"#720D5d\" }}\r\n\t\t\t>\r\n\t\t\t\t<Add fontSize=\"large\" style={{ color: \"white\" }} />\r\n\t\t\t</IconButton>\r\n\t\t\t<Backdrop className={classes.backdrop} open={bd}>\r\n\t\t\t\t<CircularProgress color=\"inherit\" />\r\n\t\t\t</Backdrop>\r\n\t\t\t<Dialog\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\tstyle={{ zIndex: \"10 !important\", position: \"absolute\" }}\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">Add a new Word</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText style={{ color: \"#E30425\" }}>\r\n\t\t\t\t\t\t{error}\r\n\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\tid=\"word\"\r\n\t\t\t\t\t\tlabel=\"Word\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tonChange={(e) => setWord(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={handleClose} color=\"primary\">\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={handleSubmit} color=\"primary\">\r\n\t\t\t\t\t\tAdd\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\n\r\nimport Header from \"../representational/Header\"\r\nimport WordList from \"../representational/WordList\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport AddWord from \"../representational/AddWord\"\r\n\r\n//Styling the components using hook\r\nconst useStyles = makeStyles((theme) => ({\r\n\thomepage: {\r\n\t\tposition: \"relative\",\r\n\t\tminHeight: \"100vh\",\r\n\t},\r\n\tadd: {\r\n\t\tposition: \"fixed\",\r\n\t\tbottom: \"10vh\",\r\n\t\tright: \"5vw\",\r\n\t\tbackgroundColor: theme.palette.primary,\r\n\t},\r\n}))\r\n\r\nconst Homepage = () => {\r\n\tconst classes = useStyles()\r\n\t//Initializing the classes\r\n\r\n\tconst [wordArray, setWordArray] = useState([])\r\n\tconst [wordList, setWordList] = useState([])\r\n\tconst [flag, setFlag] = useState(false)\r\n\tconst [term, setTerm] = useState(\"\")\r\n\r\n\t//Getting the array list stored in mongoDB database\r\n\tuseEffect(() => {\r\n\t\tconst fetchWords = async () => {\r\n\t\t\tconst data = await fetch(`/api/getAllWords`, {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t}).then((res) => res.json())\r\n\r\n\t\t\tsetWordArray(data)\r\n\t\t\tsetFlag(false)\r\n\t\t}\r\n\t\tfetchWords()\r\n\t}, [flag])\r\n\r\n\t//filter the array based on the search term\r\n\tuseEffect(() => {\r\n\t\tif (!term) {\r\n\t\t\tsetWordList(wordArray)\r\n\t\t} else {\r\n\t\t\tconst wordArr = wordArray.filter((word) => word.text.includes(term))\r\n\t\t\tsetWordList(wordArr)\r\n\t\t}\r\n\t}, [term, wordArray, wordList])\r\n\r\n\treturn (\r\n\t\t<div className={classes.homepage}>\r\n\t\t\t<Header handleTerm={(term) => setTerm(term)} />\r\n\t\t\t<WordList wordArray={wordList} />\r\n\t\t\t<div className={classes.add}>\r\n\t\t\t\t<AddWord handleReload={(flag) => setFlag(flag)} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Homepage\r\n","import React from \"react\"\r\n\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\r\nimport Homepage from \"./components/pages/Homepage\"\r\n\r\nconst MainRouter = () => {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/\" component={Homepage} />\r\n\t\t\t</Switch>\r\n\t\t</BrowserRouter>\r\n\t)\r\n}\r\n\r\nexport default MainRouter\r\n","import { createMuiTheme } from \"@material-ui/core/styles\"\r\n\r\n// Creating the theme\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: \"#5D1049\",\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: \"#E30425\",\r\n\t\t},\r\n\t\t// Setting the colors of the application\r\n\t},\r\n\ttypography: {\r\n\t\tfontFamily: \"Kumbh Sans\",\r\n\t\t// Setting Kumbh Sans font across the application\r\n\t},\r\n})\r\n\r\nexport default theme\r\n","import { ThemeProvider } from \"@material-ui/styles\"\n\nimport MainRouter from \"./MainRouter\"\n\nimport theme from \"./theme\"\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t{/* Theme Provider from material */}\n\t\t\t<MainRouter />\n\t\t\t{/* Router in case i need to use routing */}\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}